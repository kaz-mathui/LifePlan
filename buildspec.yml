version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - npm install -g pnpm@8
      - apt-get update && apt-get install -y jq

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - FRONTEND_IMAGE_REPO_URL=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$FRONTEND_IMAGE_REPO_NAME
      - BACKEND_IMAGE_REPO_URL=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$BACKEND_IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "Fetching secrets from Secrets Manager..."
      - export FIREBASE_SECRETS=$(aws secretsmanager get-secret-value --secret-id 'prd/life-plan-app/firebase' --query SecretString --output text)

  build:
    commands:
      - echo "Building and pushing frontend image..."
      # jqを使ってSERVICE_ACCOUNT_KEYを除外し、=で連結してfrontend/.envファイルに書き出す
      - echo "$FIREBASE_SECRETS" | jq -r 'del(.SERVICE_ACCOUNT_KEY) | to_entries | .[] | "\(.key)=\(.value)"' > frontend/.env
      - echo "Generated frontend/.env file:"
      - cat frontend/.env
      - docker build -t $FRONTEND_IMAGE_REPO_URL:$IMAGE_TAG -f frontend/Dockerfile .
      - docker push $FRONTEND_IMAGE_REPO_URL:$IMAGE_TAG

      - echo "Building and pushing backend image..."
      - docker build -t $BACKEND_IMAGE_REPO_URL:$IMAGE_TAG -f backend/Dockerfile .
      - docker push $BACKEND_IMAGE_REPO_URL:$IMAGE_TAG

  post_build:
    commands:
      - echo "Creating imagedefinitions files..."
      - printf '[{"name":"lifeplan-frontend","imageUri":"%s"}]' "$FRONTEND_IMAGE_REPO_URL:$IMAGE_TAG" > imagedefinitions-frontend.json
      - printf '[{"name":"lifeplan-backend","imageUri":"%s"}]' "$BACKEND_IMAGE_REPO_URL:$IMAGE_TAG" > imagedefinitions-backend.json

artifacts:
  files:
    - imagedefinitions-frontend.json
    - imagedefinitions-backend.json 
